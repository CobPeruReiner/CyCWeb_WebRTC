version: "3.9"

networks:
  appnet:

services:
  web2:
    build: ./Server
    container_name: cycweb-rtc-web
    restart: unless-stopped
    environment:
      - DOMAIN=cycwebcobperu.net
      - API_TARGET=http://rtc_api:3001
      - NODE_ENV=production
      - UV_THREADPOOL_SIZE=8
    depends_on:
      rtc_api:
        condition: service_healthy
    ports:
      - "8080:8080"
      - "444:444"
    volumes:
      - /srv/apps/CyC-GeoCampo/certbot/conf:/etc/letsencrypt:ro
      - /srv/apps/CyC-GeoCampo/certbot/www:/var/www/certbot:ro
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://127.0.0.1:8080/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    cpus: "1.0"
    mem_limit: "512m"
    networks:
      - appnet

  rtc_api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cycweb-rtc-api
    restart: unless-stopped
    env_file:
      - ./backend/.env.production
    volumes:
      - ./backend/assets:/app/assets
      - ./backend/Adjuntos:/app/Adjuntos
    expose:
      - "3001"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://127.0.0.1:3001/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    cpus: "1.5"
    mem_limit: "1024m"
    networks:
      - appnet

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cycweb-rtc-frontend
    restart: unless-stopped
    env_file:
      - ./frontend/.env.production
    depends_on:
      rtc_api:
        condition: service_started
    ports:
      - "8081:80"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://127.0.0.1/"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    cpus: "0.5"
    mem_limit: "256m"
    networks:
      - appnet
